@using Microsoft.AspNetCore.Identity
@using CulturNary.Web.Areas.Identity.Data
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    var displayName = User.Identity?.Name;
    string profileImage = null;
    if (user != null)
    {
        profileImage = user.ProfileImageName;
        if (user.DisplayName != null)
        {
            displayName = user.DisplayName;
        }
    }
    if (profileImage == null || profileImage == "")
    {
        profileImage = "/Media/ProfileImages/default.png";
    }
}

        @{
            var themeBrightness = Context.Session.GetString("ThemeBrightness");
            var themeColor = Context.Session.GetString("ThemeColor");
            var backgroundColor = "";

        switch(themeBrightness)
            {
                case "light":
                    switch(themeColor)
                    {
                        case "green":
                            backgroundColor = "#DCEDCF";
                            break;
                        case "red":
                            backgroundColor = "#FFDFD0";
                            break;
                        case "blue":
                            backgroundColor = "#D0E7FF";
                            break;
                        case "purple":
                            backgroundColor = "#E6D0FF";
                            break;
                        case "orange":
                            backgroundColor = "#FFE5CC";
                            break;
                        default:
                            backgroundColor = "#DCEDCF";
                            break;
                    }
                    break;
                case "dark":
                    switch(themeColor)
                    {
                        case "green":
                            backgroundColor = "#353F2D";
                            break;
                        case "red":
                            backgroundColor = "#5C2D29";
                            break;
                        case "blue":
                            backgroundColor = "#2D3A5C";
                            break;
                        case "purple":
                            backgroundColor = "#2D2B5C";
                            break;
                        case "orange":
                            backgroundColor = "#D36B14";
                            break;
                        default:
                            backgroundColor = "#353F2D";
                            break;
                    }
                    break;
                default:
                    switch(themeColor)
                    {
                        case "green":
                            backgroundColor = "#353F2D";
                            break;
                        case "red":
                            backgroundColor = "#5C2D29";
                            break;
                        case "blue":
                            backgroundColor = "#2D3A5C";
                            break;
                        case "purple":
                            backgroundColor = "#2D2B5C";
                            break;
                        case "orange":
                            backgroundColor = "#D36B14";
                            break;
                        default:
                            backgroundColor = "#353F2D";
                            break;
                    }
                    break;
            }
        }

<ul class="nav justify-content-end">
    
    @if (SignInManager.IsSignedIn(User))
    {
        var isAdmin = await UserManager.IsInRoleAsync(user, "Admin");
        if (isAdmin)
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="Users">Manage Users</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-area="Identity" asp-page="/Account/Manage/Profile" title="Manage">Hello @displayName!</a>
        </li>
        <li class="nav-item">
            <img src="@profileImage" alt="Profile Image" class="img-fluid pfp-mini-rounded-circle" />
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link" style="color: @(backgroundColor)">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>













@* <ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link" style="color: #407A3B;" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link" style="color: #DCEDCF;" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link" style="color: #DCEDCF;" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
 *@